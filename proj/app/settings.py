"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

r"""
 ___                            _
|_ _|_ __ ___  _ __   ___  _ __| |_ ___
 | || '_ ` _ \| '_ \ / _ \| '__| __/ __|
 | || | | | | | |_) | (_) | |  | |_\__ \
|___|_| |_| |_| .__/ \___/|_|   \__|___/
              |_|

"""

import sys # RK Added 2020-11-11
sys.path.append('/home/me/python/xplib')
sys.path.append('C:/Python/xplib')
import fs # RK Added 2020-11-11
from pathlib import Path
import platform
from lib import whisper

r"""
 ____  _                            ____                           _
|  _ \(_) __ _ _ __   __ _  ___    / ___| ___ _ __   ___ _ __ __ _| |
| | | | |/ _` | '_ \ / _` |/ _ \  | |  _ / _ \ '_ \ / _ \ '__/ _` | |
| |_| | | (_| | | | | (_| | (_) | | |_| |  __/ | | |  __/ | | (_| | |
|____// |\__,_|_| |_|\__, |\___/   \____|\___|_| |_|\___|_|  \__,_|_|
    |__/             |___/
 ____       _   _   _
/ ___|  ___| |_| |_(_)_ __   __ _ ___
\___ \ / _ \ __| __| | '_ \ / _` / __|
 ___) |  __/ |_| |_| | | | | (_| \__ \
|____/ \___|\__|\__|_|_| |_|\__, |___/
                            |___/

"""

# Use `host` to determine if we are in production mode or development.
host = platform.node()

# Django wants you to use BASE_DIR for relative path imports like so: BASE_DIR / 'subdir'.  I have
# found issues doing this, particularly when you want to using path SETTINGS elsewhere as a string.
# Thus I have resorted to using fs.fix_path_name(fs.join_names(BASE_DIR, ...)).
BASE_DIR = Path(__file__).resolve().parent.parent

# Store apps in 'proj/apps'.
APPS_DIR = fs.fix_path_name(fs.join_names(BASE_DIR, 'apps'))
sys.path.append(APPS_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7vlb5XrbQ!rBe&eh*JvABY66F#sL42RxAZn$53yv*&eLVQfo^b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # This setting gets overriden below.  See "Production or Development?" section.
THUMBNAIL_DEBUG = True # RK Added 2020-11-20

ALLOWED_HOSTS = []

r"""
 ___           _        _ _          _      _
|_ _|_ __  ___| |_ __ _| | | ___  __| |    / \   _ __  _ __  ___
 | || '_ \/ __| __/ _` | | |/ _ \/ _` |   / _ \ | '_ \| '_ \/ __|
 | || | | \__ \ || (_| | | |  __/ (_| |  / ___ \| |_) | |_) \__ \
|___|_| |_|___/\__\__,_|_|_|\___|\__,_| /_/   \_\ .__/| .__/|___/
                                                |_|   |_|
"""

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    ## Django extensions
    'django.forms', # RK Added 20202-11-20. Needed for custom widgets. See FORM_RENDERER below.
    'django.contrib.admindocs', # RK Added 2020-11-20. Needed for Django admin documentation generator.
    ## Modules and plugins
    'crispy_forms', # RK Added 2020-11-11
    'debug_toolbar', # RK Added 2020-11-11
    'easy_thumbnails', # RK Added 2020-11-11
	'django_summernote', # RK Added 2020-11-23
	'colorfield', # RK Added 2020-11-23
    ## My apps
	'main.apps.MainConfig',
	'access.apps.AccessConfig',
	# 'general.apps.GeneralConfig',
	# 'content.apps.ContentConfig',
	# 'search.apps.SearchConfig',
    'maven.apps.MavenConfig',
    # 'help.apps.HelpConfig',
]

r"""
 ____  _                           ____  _ _
|  _ \(_) __ _ _ __   __ _  ___   / ___|(_) |_ ___
| | | | |/ _` | '_ \ / _` |/ _ \  \___ \| | __/ _ \
| |_| | | (_| | | | | (_| | (_) |  ___) | | ||  __/
|____// |\__,_|_| |_|\__, |\___/  |____/|_|\__\___|
    |__/             |___/
  ____             __ _
 / ___|___  _ __  / _(_) __ _
| |   / _ \| '_ \| |_| |/ _` |
| |__| (_) | | | |  _| | (_| |
 \____\___/|_| |_|_| |_|\__, |
                        |___/
"""

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'debug_toolbar.middleware.DebugToolbarMiddleware',  # RK Added 2020-11-11. Needed for django-debug-toolbar
    'django.contrib.admindocs.middleware.XViewMiddleware', # RK Added 2020-11-20. Optional for Django admin documentation generator.
    'app.middleware.team_access.TeamAccessMiddleware',
]

INTERNAL_IPS = ['127.0.0.1'] # RK Added 2020-11-11 for django-debug-toolbar.

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [fs.fix_path_name(fs.join_names(BASE_DIR, 'templates'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
				'main.lib.template.vars.general', # RK placeholder
            ],
			'libraries': {
				'main.lib.template.tag.filters': 'main.lib.template.tag.filters', # RK placeholder
			},
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': fs.fix_path_name(fs.join_names(BASE_DIR, 'data', 'prod.db3')),
		'TEST': {'NAME': fs.fix_path_name(fs.join_names(BASE_DIR, 'data', 'debug.db3'))},
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# RK Changed from 'UTC' on 2020-11-11.
TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# FORM_RENDERER default to 'django.forms.renderers.DjangoTemplates'.  To create custom widgets, 
# that define widget templates, you need to change this value to 'django.forms.renderers.TemplatesSetting'.
# You must also update your TEMPLATES setting so that Django can still use the built in widget
# templates. The easiest way to do this is to add django.forms to INSTALLED_APPS. 
# https://stackoverflow.com/questions/46835633/django-widget-template-override-does-not-search-in-the-project-template-director
FORM_RENDERER =  'django.forms.renderers.TemplatesSetting'  

r"""
 ____  _        _   _                        _   __  __          _ _
/ ___|| |_ __ _| |_(_) ___    __ _ _ __   __| | |  \/  | ___  __| (_) __ _
\___ \| __/ _` | __| |/ __|  / _` | '_ \ / _` | | |\/| |/ _ \/ _` | |/ _` |
 ___) | || (_| | |_| | (__  | (_| | | | | (_| | | |  | |  __/ (_| | | (_| |
|____/ \__\__,_|\__|_|\___|  \__,_|_| |_|\__,_| |_|  |_|\___|\__,_|_|\__,_|

 _____ _ _
|  ___(_) | ___  ___
| |_  | | |/ _ \/ __|
|  _| | | |  __/\__ \
|_|   |_|_|\___||___/

"""

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = fs.fix_path_name(fs.join_names(BASE_DIR, 'static'))
STATICFILES_DIRS = []
MEDIA_URL = '/media/'
MEDIA_ROOT = fs.fix_path_name(fs.join_names(BASE_DIR, 'media'))

r"""
 _                _         _   _ ____  _
| |    ___   __ _(_)_ __   | | | |  _ \| |    ___
| |   / _ \ / _` | | '_ \  | | | | |_) | |   / __|
| |__| (_) | (_| | | | | | | |_| |  _ <| |___\__ \
|_____\___/ \__, |_|_| |_|  \___/|_| \_\_____|___/
            |___/

"""

# RK Added 2020-11-05
LOGIN_URL = '/user/login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

r"""
 _____                 _ _   ____       _   _   _
| ____|_ __ ___   __ _(_) | / ___|  ___| |_| |_(_)_ __   __ _ ___
|  _| | '_ ` _ \ / _` | | | \___ \ / _ \ __| __| | '_ \ / _` / __|
| |___| | | | | | (_| | | |  ___) |  __/ |_| |_| | | | | (_| \__ \
|_____|_| |_| |_|\__,_|_|_| |____/ \___|\__|\__|_|_| |_|\__, |___/
                                                        |___/
"""

# RK Added 2020-11-23
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.googlemail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = whisper.decrypt(b'gAAAAABgDczx9V13g-PjTyszibrZfxy-x0-RvQZ4tOAiQRyg69hAvxP4yh8atrVyUP4Cn9ykwGzhvGsUI3ijQjcroQ_MqBpUKeCHlZNDMezWKQqqKn9NEXg=')
EMAIL_HOST_PASSWORD = whisper.decrypt(b'gAAAAABgDc1F14ky9XQvG_jc-dLbpBogyCl-2payzc42fxt_8uLbkH-sOX7pJ75Gm_qolE7k-4eucLDXOj7WYzQ6oqccTjHw10gtjFgXLpNOxwzrjgfHOKM=')
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

r"""
 ___           _        _ _          _      _
|_ _|_ __  ___| |_ __ _| | | ___  __| |    / \   _ __  _ __  ___
 | || '_ \/ __| __/ _` | | |/ _ \/ _` |   / _ \ | '_ \| '_ \/ __|
 | || | | \__ \ || (_| | | |  __/ (_| |  / ___ \| |_) | |_) \__ \
|___|_| |_|___/\__\__,_|_|_|\___|\__,_| /_/   \_\ .__/| .__/|___/
                                                |_|   |_|
 ____       _   _   _
/ ___|  ___| |_| |_(_)_ __   __ _ ___
\___ \ / _ \ __| __| | '_ \ / _` / __|
 ___) |  __/ |_| |_| | | | | (_| \__ \
|____/ \___|\__|\__|_|_| |_|\__, |___/
                            |___/
"""

# Added for Django-Summernote support. See https://github.com/summernote/django-summernote (Setup step 5).
# Provides Clickjacking Protection.  See https://docs.djangoproject.com/en/3.0/ref/clickjacking/.
X_FRAME_OPTIONS = 'SAMEORIGIN'

SUMMERNOTE_CONFIG = {
    'summernote': {
        # As an example, using Summernote Air-mode
        'airMode': False,

        # Change editor size
        'width': '100%',
        'height': '500',

        # Use proper language setting automatically (default)
        'lang': None,
        
        # Toolbar customization
        # https://summernote.org/deep-dive/#custom-toolbar-popover
        'toolbar': [
            ['style', ['style']],
            ['font', ['bold', 'italic', 'underline', 'superscript', 'subscript', 'clear']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['table', ['table']],
            ['insert', ['link', 'picture']],
            ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']],
        ],

    },
    'css': (
        '/static/site/css/summernote.css',
    ),

    # You can completely disable the attachment feature.
    'disable_attachment': True,
}

# Crispy forms theme
CRISPY_TEMPLATE_PACK = 'bootstrap4' # RK Added 2020-11-11

# Redefine and extend Django User model.
AUTH_USER_MODEL = 'access.User' # RK - Added 2020-09-19

# Thumbnail options (RK Added 2020-11-20)
THUMBNAIL_HIGH_RESOLUTION = True
THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    #'easy_thumbnails.processors.scale_and_crop',
    'easy_thumbnails.processors.filters',
)

MEDIA_MAVEN = {
    # Set 'THEME' to one of: 'autumn', 'charcoal', 'midnight', or 'ocean' -- or roll your own!!!
    'THEME': 'ocean',  
}

r"""
 ____                _            _   _
|  _ \ _ __ ___   __| |_   _  ___| |_(_) ___  _ __     ___  _ __
| |_) | '__/ _ \ / _` | | | |/ __| __| |/ _ \| '_ \   / _ \| '__|
|  __/| | | (_) | (_| | |_| | (__| |_| | (_) | | | | | (_) | |
|_|   |_|  \___/ \__,_|\__,_|\___|\__|_|\___/|_| |_|  \___/|_|

 ____                 _                                       _  ___
|  _ \  _____   _____| | ___  _ __   ___ _ __ ___   ___ _ __ | ||__ \
| | | |/ _ \ \ / / _ \ |/ _ \| '_ \ / _ \ '_ ` _ \ / _ \ '_ \| __|/ /
| |_| |  __/\ V /  __/ | (_) | |_) |  __/ | | | | |  __/ | | | |_|_|
|____/ \___| \_/ \___|_|\___/| .__/ \___|_| |_| |_|\___|_| |_|\__(_)
                             |_|

"""

# This allows me to seamlessly transition from my development environment during debug to my production environment.
if host == 'Kadura-5':
    from .config.dev import *
else:  # pragma: no cover
    from .config.prod import *   # pragma: no cover

r"""
 _____         _   _            ___
|_   _|__  ___| |_(_)_ __   __ |__ \
  | |/ _ \/ __| __| | '_ \ / _` |/ /
  | |  __/\__ \ |_| | | | | (_| |_|
  |_|\___||___/\__|_|_| |_|\__, (_)
                           |___/
"""

# TESTING is an option that can be set to True in app `tests.py` files.  You must do:
#   from django.test import override_settings
# Then, ror a test method, prepend: 
#   @override_settings(TESTING=True).  
TESTING = False  # Added 2021-03-21